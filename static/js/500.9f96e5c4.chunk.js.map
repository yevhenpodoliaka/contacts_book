{"version":3,"file":"static/js/500.9f96e5c4.chunk.js","mappings":"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","sources":["components/Modal.jsx","hooks/useLockalStorage.js","components/EditContactForm.jsx","components/ContactItem.jsx","components/ContactList.jsx","components/Filter.jsx","components/BottomAppBar.jsx","components/AddContactForm.jsx","pages/ContactsListPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport { IconButton, Dialog, Slide } from '@mui/material';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nexport default function Modal({children ,isOpen,toggleIsOpen}) {\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={toggleIsOpen}\n      TransitionComponent={Transition}\n    >\n      <IconButton\n        sx={{ width: '25px', height: '25px' }}\n        color=\"inherit\"\n        onClick={toggleIsOpen}\n        aria-label=\"close\"\n      >\n        <CloseIcon />\n      </IconButton>\n      {children}\n    </Dialog>\n  );\n}","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    let currentValue;\n    try {\n      currentValue = JSON.parse(\n        localStorage.getItem(key) ?? defaultValue\n      );\n    } catch (error) {\n      currentValue = defaultValue;\n    }\n\n    return currentValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport useLocalStorage from 'hooks/useLockalStorage';\nimport {\n  useGetContactByIdQuery,\n  useEditContactMutation,\n} from '../redux/phoneBook/phoneBookApi';\nimport { Box, TextField, Button } from '@mui/material';\n\nexport default function EditContactForm({ id }) {\n  const [name, setName] = useLocalStorage('editedName', '');\n  const [email, setEmail] = useLocalStorage('editedEmail', '');\n  const [phone, setPhone] = useLocalStorage('editedPhone', '');\n\n  const { data } = useGetContactByIdQuery(id);\n  const [editContact, { isSuccess, isError, error }] = useEditContactMutation();\n\n  useEffect(() => {\n    if (data) {\n      setName(data.data.contact.name);\n      setEmail(data.data.contact.email);\n      setPhone(data.data.contact.phone);\n    }\n  }, [data, setEmail, setName, setPhone]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(`contact ${data.data.contact.name} changed `);\n    }\n    if (isError) {\n      toast.error(`Error: ${error.data.message} `);\n    }\n  }, [data, error, isError, isSuccess]);\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      data.data.contact.name === name &&\n      data.data.contact.email === email &&\n      data.data.contact.phone === phone\n    ) {\n      toast(`contact is not changed `);\n      return\n    } else {\n       editContact({ id, data: { name, email, phone } });\n    }\n \n    editContact({ id, data: { name, email, phone } });\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      noValidate\n      sx={{ maxWidth: 'sm', mx: 'auto', p: '15px' }}\n    >\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Name\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"phone\"\n        value={phone}\n        label=\"Phone\"\n        type=\"tel\"\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Change\n      </Button>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport { Paper, Avatar, IconButton, Typography, Box } from '@mui/material';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\nimport Modal from './Modal';\nimport EditContactForm from './EditContactForm';\n\nexport default function ContactItem({\n  id,\n  name,\n  phone,\n  email,\n  onDeleteContact,\n  favorite,\n  onToggleFavoriteContact,\n}) {\n  const [modalIsOpen, setModalIsOpen] = React.useState(false);\n  const toggleModal = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const firstLetter = name[0];\n  return (\n    <>\n      <Paper sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Avatar\n          sx={{\n            bgcolor: 'secondary.main',\n            width: 24,\n            height: 24,\n          }}\n        >\n          {firstLetter}\n        </Avatar>\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Typography variant=\"button\" display=\"block\">\n            {name}\n          </Typography>\n          <Typography variant=\"caption\" display=\"block\">\n            {email}\n          </Typography>\n          <Typography variant=\"overline\" display=\"block\">\n            {phone}\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <IconButton\n            size=\"small\"\n            aria-label=\"delete\"\n            color=\"primary\"\n            onClick={onDeleteContact}\n          >\n            <DeleteIcon fontSize=\"inherit\" />\n          </IconButton>\n          <div>\n            <IconButton\n              size=\"small\"\n              color=\"primary\"\n              aria-label=\"edit\"\n              onClick={toggleModal}\n            >\n              <CreateIcon fontSize=\"inherit\" />\n            </IconButton>\n          </div>\n          <IconButton\n            size=\"small\"\n            aria-label=\"favorite\"\n            color=\"primary\"\n            onClick={onToggleFavoriteContact}\n          >\n            {favorite ? (\n              <FavoriteIcon fontSize=\"inherit\" />\n            ) : (\n              <FavoriteBorderIcon fontSize=\"inherit\" />\n            )}\n          </IconButton>\n        </Box>\n      </Paper>\n      <Modal isOpen={modalIsOpen} toggleIsOpen={toggleModal}>\n        <EditContactForm id={id} />\n      </Modal>\n    </>\n  );\n}\n","import ContactItem from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  getFilterValue,\n  getShowFavoriteValue,\n} from '../redux/phoneBook/filterSlice';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useToggleFavoriteContactMutation,\n} from '../redux/phoneBook/phoneBookApi';\n\nimport { List, Typography } from '@mui/material';\n\nexport default function ContactList() {\n  const { data } = useGetContactsQuery();\n\n  let contacts = data?.data.result;\n\n  const [deleteContact] = useDeleteContactMutation();\n  const [toggleFavoriteContact] = useToggleFavoriteContactMutation();\n  const filterValue = useSelector(getFilterValue);\n\n  const showFavoriteContacts = useSelector(getShowFavoriteValue);\n  if (showFavoriteContacts) {\n    contacts = data?.data.result.filter(contact => contact.favorite);\n  }\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <List>\n        {visibleContacts ? (\n          visibleContacts?.map(({ _id, name, phone, email, favorite }) => (\n            <ContactItem\n              key={_id}\n              id={_id}\n              name={name}\n              phone={phone}\n              email={email}\n              favorite={favorite}\n              onDeleteContact={() => deleteContact(_id)}\n              onToggleFavoriteContact={() =>\n                toggleFavoriteContact({\n                  id: _id,\n                  data: { favorite: !favorite },\n                })\n              }\n            />\n          ))\n        ) : (\n          <Typography>Loading Contact ...</Typography>\n        )}\n      </List>\n      {contacts?.length === 0 && (\n        <Typography>there are not contacts</Typography>\n      )}\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilterValue } from '../redux/phoneBook/filterSlice';\nimport { Paper,  InputBase } from '@mui/material';\n\nexport default function Filter() {\n  const value = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <Paper>\n      <InputBase\n        component=\"form\"\n        value={value}\n        onChange={onChangeFilter}\n        placeholder=\" Find contacts by name \"\n      />\n    </Paper>\n  );\n}\n","import * as React from 'react';\nimport { AppBar, Toolbar, IconButton, Fab } from '@mui/material';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport AddIcon from '@mui/icons-material/Add';\nimport { styled } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  toggleShowFavorite,\n  getShowFavoriteValue,\n} from '../redux/phoneBook/filterSlice';\n\n\nconst StyledFab = styled(Fab)({\n  position: 'absolute',\n  zIndex: 1,\n  top: -30,\n  left: 0,\n  right: 0,\n  margin: '0 auto',\n});\n\nexport default function BottomAppBar({ onOpenModal }) {\n  \n  const dispatch = useDispatch();\n  const isShowFavoriteContact = useSelector(getShowFavoriteValue);\n  \n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"favorite list\"\n            size=\"large\"\n            onClick={() => dispatch(toggleShowFavorite())}\n          >\n            {isShowFavoriteContact ? <ImportContactsIcon /> : <FavoriteIcon />}\n          </IconButton>\n\n          <StyledFab\n            color=\"secondary\"\n            aria-label=\"add\"\n            onClick={onOpenModal}\n          >\n            <AddIcon />\n          </StyledFab>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport useLocalStorage from 'hooks/useLockalStorage';\nimport toast from 'react-hot-toast';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../redux/phoneBook/phoneBookApi';\nimport { Box, TextField, Button } from '@mui/material';\n\nexport default function AddContactForm() {\n  const [name, setName] = useLocalStorage('name', '');\n  const [email, setEmail] = useLocalStorage('email', '');\n  const [phone, setPhone] = useLocalStorage('phone', '');\n\n  const [addContact, { isSuccess, data, isError, error }] =\n    useAddContactMutation();\n\n  const { data: req } = useGetContactsQuery();\n\n  const contacts = req?.data.result;\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(`contact ${data.data.contact.name} add in list`);\n    }\n    if (isError) {\n      toast.error(`Error: ${error.data.message} `);\n    }\n  }, [isSuccess, data, error, isError, phone]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const addNewContact = () => {\n    const contactName = contacts?.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    const contactPhone = contacts?.find(el => el.phone === phone);\n\n    if (contactName) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n    if (contactPhone) {\n      toast.error(`contact with ${phone} number is already in contacts`);\n      return;\n    } else {\n      addContact({ name, phone, email });\n      setName('');\n      setEmail('');\n      setPhone('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name && phone) {\n      addNewContact();\n    } else {\n      toast('name and phone must have in form');\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      noValidate\n      sx={{ maxWidth: 'sm', mx: 'auto', p: '15px' }}\n    >\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"Name\"\n        name=\"name\"\n        value={name}\n        autoFocus\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id=\"email\"\n        label=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"phone\"\n        value={phone}\n        label=\"Phone\"\n        type=\"tel\"\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Add\n      </Button>\n    </Box>\n  );\n}\n","import { useState } from 'react';\nimport ContactList from '../components/ContactList';\nimport Filter from 'components/Filter';\nimport BottomAppBar from 'components/BottomAppBar';\nimport Modal from 'components/Modal';\nimport AddContactForm from 'components/AddContactForm';\n\nexport default function ContactListPage() {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const toggleModal = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n  return (\n    <>\n      <Filter />\n      <ContactList />\n      <BottomAppBar onOpenModal={toggleModal} />\n      <Modal isOpen={modalIsOpen} toggleIsOpen={toggleModal}>\n        <AddContactForm />\n      </Modal>\n    </>\n  );\n}\n"],"names":["Transition","React","props","ref","Slide","direction","Modal","children","isOpen","toggleIsOpen","Dialog","open","onClose","TransitionComponent","IconButton","sx","width","height","color","onClick","Close","key","defaultValue","useState","currentValue","JSON","parse","localStorage","getItem","error","value","setValue","useEffect","setItem","stringify","EditContactForm","id","useLocalStorage","name","setName","email","setEmail","phone","setPhone","data","useGetContactByIdQuery","useEditContactMutation","editContact","isSuccess","isError","handleChange","e","currentTarget","contact","toast","message","Box","component","onSubmit","preventDefault","noValidate","maxWidth","mx","p","TextField","margin","fullWidth","label","onChange","required","type","Button","variant","mt","mb","ContactItem","onDeleteContact","favorite","onToggleFavoriteContact","modalIsOpen","setModalIsOpen","toggleModal","firstLetter","Paper","display","alignItems","Avatar","bgcolor","flexGrow","ml","Typography","flexDirection","size","Delete","fontSize","Create","Favorite","FavoriteBorder","ContactList","useGetContactsQuery","contacts","result","useDeleteContactMutation","deleteContact","useToggleFavoriteContactMutation","toggleFavoriteContact","filterValue","useSelector","getFilterValue","getShowFavoriteValue","filter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","List","map","_id","length","Filter","dispatch","useDispatch","InputBase","setFilter","target","placeholder","StyledFab","styled","Fab","position","zIndex","top","left","right","BottomAppBar","onOpenModal","isShowFavoriteContact","AppBar","bottom","Toolbar","toggleShowFavorite","ImportContacts","Add","AddContactForm","useAddContactMutation","addContact","req","contactName","find","el","contactPhone","addNewContact","autoFocus","ContactListPage"],"sourceRoot":""}