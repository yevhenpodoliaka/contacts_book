{"version":3,"file":"static/js/726.59167990.chunk.js","mappings":"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","sources":["components/ToggledFavoriteButton.jsx","components/DeleteContactButton.jsx","components/EditContactButton.jsx","components/ContactItem.jsx","components/ContactList.jsx","components/Filter.jsx","components/BottomAppBar.jsx","components/Modal.jsx","hooks/useLocalStorage.js","components/AddContactForm.jsx","components/EditContactForm.jsx","pages/ContactsListPage.jsx"],"sourcesContent":["import { useEffect,memo } from 'react';\nimport toast from 'react-hot-toast';\nimport IconButton from '@mui/material/IconButton';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { useToggleFavoriteContactMutation } from '../redux/phoneBook/phoneBookApi';\n\nconst ToggledFavoriteButton = ({ id, name, favorite }) => {\n  const [\n    toggleFavoriteContact,\n    {\n      isSuccess: isSuccessToggledFavorite,\n      error: isErrorToggledFavorite,\n      isLoading: isToggledFavorite,\n    },\n  ] = useToggleFavoriteContactMutation();\n\n  useEffect(() => {\n    if (isSuccessToggledFavorite) {\n      toast.success(`status contact ${name} \"is favorite\" changed`);\n    }\n\n    if (isErrorToggledFavorite) {\n      toast.error(\n        `an error occurred while changing the status of a contact${name}`\n      );\n    }\n  }, [isErrorToggledFavorite, isSuccessToggledFavorite, name]);\n  return (\n    <IconButton\n      size=\"small\"\n      aria-label=\"favorite\"\n      color=\"primary\"\n      disabled={isToggledFavorite}\n      onClick={() =>\n        toggleFavoriteContact({\n          id,\n          data: { favorite: !favorite },\n        })\n      }\n    >\n      {favorite ? (\n        <FavoriteIcon fontSize=\"inherit\" />\n      ) : (\n        <FavoriteBorderIcon fontSize=\"inherit\" />\n      )}\n    </IconButton>\n  );\n};\n\nexport default memo(ToggledFavoriteButton);\n","import { useEffect, memo } from 'react';\nimport toast from 'react-hot-toast';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDeleteContactMutation } from '../redux/phoneBook/phoneBookApi';\n\nconst DeleteContactButton = ({ id, name }) => {\n  const [\n    deleteContact,\n    {\n      isSuccess: isSuccessDeleted,\n      error: isErrorDeleted,\n      isLoading: isDeleted,\n    },\n  ] = useDeleteContactMutation();\n\n  useEffect(() => {\n    if (isSuccessDeleted) {\n      toast.success(`contact ${name} is deleted`);\n    }\n\n    if (isErrorDeleted) {\n      toast.error(`an error occurred while deleting a contact${name}`);\n    }\n  }, [isErrorDeleted, isSuccessDeleted, name]);\n  return (\n    <IconButton\n      size=\"small\"\n      aria-label=\"delete\"\n      color=\"primary\"\n      onClick={() => deleteContact(id)}\n      disabled={isDeleted}\n    >\n      <DeleteIcon fontSize=\"inherit\" />\n    </IconButton>\n  );\n};\n\nexport default memo(DeleteContactButton);\n","import { memo } from 'react';\nimport { IconButton } from '@mui/material';\nimport CreateIcon from '@mui/icons-material/Create';\n\nconst EditContactButton = ({ openModal, setContactId, id }) => {\n  const handleClick = () => {\n    setContactId(id);\n    openModal();\n  };\n\n  return (\n    <IconButton\n      size=\"small\"\n      color=\"primary\"\n      aria-label=\"edit\"\n      onClick={handleClick}\n    >\n      <CreateIcon fontSize=\"inherit\" />\n    </IconButton>\n  );\n};\n\nexport default memo(EditContactButton);\n","import { memo } from \"react\"\nimport { Paper, Avatar, Typography, Box } from '@mui/material';\nimport ToggledFavoriteButton from './ToggledFavoriteButton';\nimport DeleteContactButton from './DeleteContactButton';\nimport EditContactButton from './EditContactButton';\n\nconst ContactItem = ({\n  id,\n  name,\n  phone,\n  email,\n  favorite,\n  setContactId,\n  openModal,\n}) => {\n  \n  const firstLetter = name[0];\n  return (\n    <>\n      <Paper sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Avatar\n          sx={{\n            bgcolor: 'secondary.main',\n            width: 24,\n            height: 24,\n          }}\n        >\n          {firstLetter}\n        </Avatar>\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Typography variant=\"button\" display=\"block\">\n            {name}\n          </Typography>\n          <Typography variant=\"caption\" display=\"block\">\n            {email}\n          </Typography>\n          <Typography variant=\"overline\" display=\"block\">\n            {phone}\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <DeleteContactButton id={id} name={name} />\n          <EditContactButton\n            id={id}\n            setContactId={setContactId}\n            openModal={openModal}\n          />\n          <ToggledFavoriteButton id={id} favorite={favorite} name={name} />\n        </Box>\n      </Paper>\n    </>\n  );\n};\nexport default memo(ContactItem);\n","import ContactItem from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  getFilterValue,\n  getShowFavoriteValue,\n} from '../redux/phoneBook/filterSlice';\nimport { List, Typography } from '@mui/material';\n\nconst ContactList = ({ data, setContactId,openModal }) => {\n  let contacts = data;\n\n  const filterValue = useSelector(getFilterValue);\n\n  const showFavoriteContacts = useSelector(getShowFavoriteValue);\n  if (showFavoriteContacts) {\n    contacts = contacts.filter(contact => contact.favorite);\n  }\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <List>\n        {visibleContacts ? (\n          visibleContacts?.map(({ _id, name, phone, email, favorite }) => (\n            <ContactItem\n              key={_id}\n              id={_id}\n              name={name}\n              phone={phone}\n              email={email}\n              favorite={favorite}\n              setContactId={setContactId}\n              openModal={openModal}\n              \n            />\n          ))\n        ) : (\n          <Typography>Loading Contact ...</Typography>\n        )}\n      </List>\n      {contacts?.length === 0 && (\n        <Typography>there are not contacts</Typography>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilterValue } from '../redux/phoneBook/filterSlice';\nimport { Paper, InputBase } from '@mui/material';\nimport{memo}from \"react\"\n\n\n const Filter=()=> {\n   const value = useSelector(getFilterValue);\n   const dispatch = useDispatch();\n   const onChangeFilter = e => {\n     dispatch(setFilter(e.target.value));\n   };\n   \n   return (\n     <Paper>\n       <InputBase\n         component=\"form\"\n         value={value}\n         onChange={onChangeFilter}\n         placeholder=\" Find contacts by name \"\n       />\n     </Paper>\n   );\n }\nexport default memo(Filter)\n","import * as React from 'react';\nimport { AppBar, Toolbar, IconButton, Fab } from '@mui/material';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport AddIcon from '@mui/icons-material/Add';\nimport { styled } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  toggleShowFavorite,\n  getShowFavoriteValue,\n} from '../redux/phoneBook/filterSlice';\n\nconst StyledFab = styled(Fab)({\n  position: 'absolute',\n  zIndex: 1,\n  top: -30,\n  left: 0,\n  right: 0,\n  margin: '0 auto',\n});\n\nconst BottomAppBar = ({ onOpenModal }) => {\n  const dispatch = useDispatch();\n  const isShowFavoriteContact = useSelector(getShowFavoriteValue);\n\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        color=\"primary\"\n        sx={{ top: 'auto', bottom: 0 }}\n        component=\"footer\"\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"favorite list\"\n            size=\"large\"\n            onClick={() => dispatch(toggleShowFavorite())}\n          >\n            {isShowFavoriteContact ? <ImportContactsIcon /> : <FavoriteIcon />}\n          </IconButton>\n\n          <StyledFab color=\"secondary\" aria-label=\"add\" onClick={onOpenModal}>\n            <AddIcon />\n          </StyledFab>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default BottomAppBar;\n","import * as React from 'react';\nimport { IconButton, Dialog, Slide } from '@mui/material';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Modal = ({ children, isOpen,closeModal, setContactId }) => {\n  const onClose = () => {\n    setContactId(null);\n    closeModal();\n  };\n  return (\n    <Dialog open={isOpen} onClose={onClose} TransitionComponent={Transition}>\n      <IconButton\n        sx={{ width: '25px', height: '25px' }}\n        color=\"inherit\"\n        onClick={onClose}\n        aria-label=\"close\"\n      >\n        <CloseIcon />\n      </IconButton>\n      {children}\n    </Dialog>\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    let currentValue;\n    try {\n      currentValue = JSON.parse(\n        localStorage.getItem(key) ?? defaultValue\n      );\n    } catch (error) {\n      currentValue = defaultValue;\n    }\n\n    return currentValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import { useEffect } from 'react';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport toast from 'react-hot-toast';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../redux/phoneBook/phoneBookApi';\nimport { Box, TextField, Button } from '@mui/material';\n\nconst AddContactForm = () => {\n  const [name, setName] = useLocalStorage('name', '');\n  const [email, setEmail] = useLocalStorage('email', '');\n  const [phone, setPhone] = useLocalStorage('phone', '');\n\n  const [addContact, { isSuccess, data, isError, error }] =\n    useAddContactMutation();\n\n  const { data: req } = useGetContactsQuery();\n\n  const contacts = req?.data.result;\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(`contact ${data.data.contact.name} add in list`);\n    }\n    if (isError) {\n      toast.error(`Error: ${error.data.message} `);\n    }\n  }, [isSuccess, data, error, isError, phone]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const addNewContact = () => {\n    const contactName = contacts?.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    const contactPhone = contacts?.find(el => el.phone === phone);\n\n    if (contactName) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n    if (contactPhone) {\n      toast.error(`contact with ${phone} number is already in contacts`);\n      return;\n    } else {\n      addContact({ name, phone, email });\n      setName('');\n      setEmail('');\n      setPhone('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name && phone) {\n      addNewContact();\n    } else {\n      toast('name and phone must have in form');\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      noValidate\n      sx={{ maxWidth: 'sm', mx: 'auto', p: '15px' }}\n    >\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"Name\"\n        name=\"name\"\n        value={name}\n        autoFocus\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id=\"email\"\n        label=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"phone\"\n        value={phone}\n        label=\"Phone\"\n        type=\"tel\"\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Add\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddContactForm;\n","import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport {\n  useGetContactByIdQuery,\n  useEditContactMutation,\n} from '../redux/phoneBook/phoneBookApi';\nimport { Box, TextField, Button } from '@mui/material';\n\nconst EditContactForm = ({ id }) => {\n  const [name, setName] = useLocalStorage('editedName', '');\n  const [email, setEmail] = useLocalStorage('editedEmail', '');\n  const [phone, setPhone] = useLocalStorage('editedPhone', '');\n\n  const { data } = useGetContactByIdQuery(id);\n  const [editContact, { isSuccess, isError, error }] = useEditContactMutation();\n\n  useEffect(() => {\n    if (data) {\n      setName(data.data.contact.name);\n      setEmail(data.data.contact.email);\n      setPhone(data.data.contact.phone);\n    }\n  }, [data, setEmail, setName, setPhone]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(`contact ${data.data.contact.name} changed `);\n    }\n    if (isError) {\n      toast.error(`Error: ${error.data.message} `);\n    }\n  }, [data, error, isError, isSuccess]);\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      data.data.contact.name === name &&\n      data.data.contact.email === email &&\n      data.data.contact.phone === phone\n    ) {\n      toast(`contact is not changed `);\n      return;\n    } else {\n      editContact({ id, data: { name, email, phone } });\n    }\n\n    editContact({ id, data: { name, email, phone } });\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      noValidate\n      sx={{ maxWidth: 'sm', mx: 'auto', p: '15px' }}\n    >\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Name\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"phone\"\n        value={phone}\n        label=\"Phone\"\n        type=\"tel\"\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Change\n      </Button>\n    </Box>\n  );\n};\n\nexport default EditContactForm;\n","import { useState, useCallback } from 'react';\nimport { useGetContactsQuery } from '../redux/phoneBook/phoneBookApi';\nimport ContactList from '../components/ContactList';\nimport Filter from 'components/Filter';\nimport BottomAppBar from 'components/BottomAppBar';\nimport Modal from 'components/Modal';\nimport AddContactForm from 'components/AddContactForm';\nimport EditContactForm from 'components/EditContactForm';\n\nconst ContactListPage = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editableContactId, setEditableContactId] = useState(null);\n\n  const openModal = useCallback(() => {\n    setModalIsOpen(true);\n  }, []);\n  const closeModal = useCallback(() => {\n    setModalIsOpen(false);\n  }, []);\n\n\n  const { data } = useGetContactsQuery();\n  const contacts = data?.data.result;\n\n  return (\n    <>\n      <main style={{ padding: '15px', margin: '65px 0' }}>\n        {contacts?.length > 5 && <Filter />}\n        <ContactList\n          data={contacts}\n          setContactId={setEditableContactId}\n          openModal={openModal}\n        />\n      </main>\n      <BottomAppBar onOpenModal={openModal} />\n      {modalIsOpen && (\n        <Modal\n          isOpen={modalIsOpen}\n          closeModal={closeModal}\n          setContactId={setEditableContactId}\n        >\n          {editableContactId ? (\n            <EditContactForm id={editableContactId} />\n          ) : (\n            <AddContactForm />\n          )}\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default ContactListPage;\n"],"names":["ToggledFavoriteButton","id","name","favorite","useToggleFavoriteContactMutation","toggleFavoriteContact","isSuccessToggledFavorite","isSuccess","isErrorToggledFavorite","error","isToggledFavorite","isLoading","useEffect","toast","IconButton","size","color","disabled","onClick","data","Favorite","fontSize","FavoriteBorder","memo","DeleteContactButton","useDeleteContactMutation","deleteContact","isSuccessDeleted","isErrorDeleted","isDeleted","Delete","EditContactButton","openModal","setContactId","Create","ContactItem","phone","email","firstLetter","Paper","sx","display","alignItems","mb","Avatar","bgcolor","width","height","Box","flexGrow","ml","Typography","variant","flexDirection","contacts","filterValue","useSelector","getFilterValue","getShowFavoriteValue","filter","contact","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","List","map","_id","length","Filter","value","dispatch","useDispatch","InputBase","component","onChange","e","setFilter","target","placeholder","StyledFab","styled","Fab","position","zIndex","top","left","right","margin","onOpenModal","isShowFavoriteContact","AppBar","bottom","Toolbar","toggleShowFavorite","ImportContacts","Add","Transition","React","props","ref","Slide","direction","children","isOpen","closeModal","onClose","Dialog","open","TransitionComponent","Close","key","defaultValue","useState","currentValue","JSON","parse","localStorage","getItem","setValue","setItem","stringify","useLocalStorage","setName","setEmail","setPhone","useAddContactMutation","addContact","isError","req","useGetContactsQuery","result","message","handleChange","currentTarget","onSubmit","preventDefault","contactName","find","el","contactPhone","addNewContact","noValidate","maxWidth","mx","p","TextField","required","fullWidth","label","autoFocus","type","Button","mt","useGetContactByIdQuery","useEditContactMutation","editContact","modalIsOpen","setModalIsOpen","editableContactId","setEditableContactId","useCallback","style","padding"],"sourceRoot":""}