{"version":3,"file":"static/js/799.9119229d.chunk.js","mappings":"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","sources":["components/ToggledFavoriteButton.jsx","components/DeleteContactButton.jsx","components/Modal.jsx","hooks/useLocalStorage.js","components/EditContactForm.jsx","components/ContactItem.jsx","components/ContactList.jsx","components/Filter.jsx","components/BottomAppBar.jsx","components/AddContactForm.jsx","pages/ContactsListPage.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport IconButton from '@mui/material/IconButton';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { useToggleFavoriteContactMutation } from '../redux/phoneBook/phoneBookApi';\n\nconst ToggledFavoriteButton = ({ id, name, favorite }) => {\n\n  const [\n    toggleFavoriteContact,\n    {\n      isSuccess: isSuccessToggledFavorite,\n      error: isErrorToggledFavorite,\n      isLoading: isToggledFavorite,\n    },\n  ] = useToggleFavoriteContactMutation();\n\n  useEffect(() => {\n    if (isSuccessToggledFavorite) {\n      toast.success(`status contact ${name} \"is favorite\" changed`);\n    }\n\n    if (isErrorToggledFavorite) {\n      toast.error(\n        `an error occurred while changing the status of a contact${name}`\n      );\n    }\n  }, [isErrorToggledFavorite, isSuccessToggledFavorite, name]);\n  return (\n    <IconButton\n      size=\"small\"\n      aria-label=\"favorite\"\n      color=\"primary\"\n      disabled={isToggledFavorite}\n      onClick={() =>\n        toggleFavoriteContact({\n          id,\n          data: { favorite: !favorite },\n        })\n      }\n    >\n      {favorite ? (\n        <FavoriteIcon fontSize=\"inherit\" />\n      ) : (\n        <FavoriteBorderIcon fontSize=\"inherit\" />\n      )}\n    </IconButton>\n  );\n};\n\nexport default ToggledFavoriteButton;\n","import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDeleteContactMutation } from '../redux/phoneBook/phoneBookApi';\n\nconst DeleteContactButton = ({ id, name }) => {\n\n  const [\n    deleteContact,\n    {\n      isSuccess: isSuccessDeleted,\n      error: isErrorDeleted,\n      isLoading: isDeleted,\n    },\n  ] = useDeleteContactMutation();\n\n  useEffect(() => {\n    if (isSuccessDeleted) {\n      toast.success(`contact ${name} is deleted`);\n    }\n\n    if (isErrorDeleted) {\n      toast.error(`an error occurred while deleting a contact${name}`);\n    }\n  }, [isErrorDeleted, isSuccessDeleted, name]);\n  return (\n    <IconButton\n      size=\"small\"\n      aria-label=\"delete\"\n      color=\"primary\"\n      onClick={() => deleteContact(id)}\n      disabled={isDeleted}\n    >\n      <DeleteIcon fontSize=\"inherit\" />\n    </IconButton>\n  );\n};\n\n\nexport default DeleteContactButton;\n","import * as React from 'react';\nimport { IconButton, Dialog, Slide } from '@mui/material';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Modal = ({ children, isOpen, toggleIsOpen }) => {\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={toggleIsOpen}\n      TransitionComponent={Transition}\n    >\n      <IconButton\n        sx={{ width: '25px', height: '25px' }}\n        color=\"inherit\"\n        onClick={toggleIsOpen}\n        aria-label=\"close\"\n      >\n        <CloseIcon />\n      </IconButton>\n      {children}\n    </Dialog>\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    let currentValue;\n    try {\n      currentValue = JSON.parse(\n        localStorage.getItem(key) ?? defaultValue\n      );\n    } catch (error) {\n      currentValue = defaultValue;\n    }\n\n    return currentValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport {\n  useGetContactByIdQuery,\n  useEditContactMutation,\n} from '../redux/phoneBook/phoneBookApi';\nimport { Box, TextField, Button } from '@mui/material';\n\nconst EditContactForm = ({ id }) => {\n  const [name, setName] = useLocalStorage('editedName', '');\n  const [email, setEmail] = useLocalStorage('editedEmail', '');\n  const [phone, setPhone] = useLocalStorage('editedPhone', '');\n  console.log('EditContactForm');\n  const { data } = useGetContactByIdQuery(id);\n  const [editContact, { isSuccess, isError, error }] = useEditContactMutation();\n\n  useEffect(() => {\n    if (data) {\n      setName(data.data.contact.name);\n      setEmail(data.data.contact.email);\n      setPhone(data.data.contact.phone);\n    }\n  }, [data, setEmail, setName, setPhone]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(`contact ${data.data.contact.name} changed `);\n    }\n    if (isError) {\n      toast.error(`Error: ${error.data.message} `);\n    }\n  }, [data, error, isError, isSuccess]);\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      data.data.contact.name === name &&\n      data.data.contact.email === email &&\n      data.data.contact.phone === phone\n    ) {\n      toast(`contact is not changed `);\n      return;\n    } else {\n      editContact({ id, data: { name, email, phone } });\n    }\n\n    editContact({ id, data: { name, email, phone } });\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      noValidate\n      sx={{ maxWidth: 'sm', mx: 'auto', p: '15px' }}\n    >\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Name\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"phone\"\n        value={phone}\n        label=\"Phone\"\n        type=\"tel\"\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Change\n      </Button>\n    </Box>\n  );\n};\n\nexport default EditContactForm;\n","import { useState } from 'react';\n\nimport { Paper, Avatar, IconButton, Typography, Box } from '@mui/material';\n\nimport CreateIcon from '@mui/icons-material/Create';\nimport ToggledFavoriteButton from './ToggledFavoriteButton';\nimport DeleteContactButton from './DeleteContactButton';\nimport Modal from './Modal';\nimport EditContactForm from './EditContactForm';\n\nconst ContactItem = ({ id, name, phone, email, favorite }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const toggleModal = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const firstLetter = name[0];\n  return (\n    <>\n      <Paper sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Avatar\n          sx={{\n            bgcolor: 'secondary.main',\n            width: 24,\n            height: 24,\n          }}\n        >\n          {firstLetter}\n        </Avatar>\n        <Box sx={{ flexGrow: 1, ml: 2 }}>\n          <Typography variant=\"button\" display=\"block\">\n            {name}\n          </Typography>\n          <Typography variant=\"caption\" display=\"block\">\n            {email}\n          </Typography>\n          <Typography variant=\"overline\" display=\"block\">\n            {phone}\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <DeleteContactButton id={id} name={name} />\n\n          <IconButton\n            size=\"small\"\n            color=\"primary\"\n            aria-label=\"edit\"\n            onClick={toggleModal}\n          >\n            <CreateIcon fontSize=\"inherit\" />\n          </IconButton>\n\n          <ToggledFavoriteButton id={id} favorite={favorite} name={name} />\n        </Box>\n      </Paper>\n      {modalIsOpen && (\n        <Modal isOpen={modalIsOpen} toggleIsOpen={toggleModal}>\n          <EditContactForm id={id} />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  getFilterValue,\n  getShowFavoriteValue,\n} from '../redux/phoneBook/filterSlice';\n\nimport { List, Typography } from '@mui/material';\n\nconst ContactList = ({ data }) => {\n  let contacts = data;\n\n\n  const filterValue = useSelector(getFilterValue);\n\n  const showFavoriteContacts = useSelector(getShowFavoriteValue);\n  if (showFavoriteContacts) {\n    contacts = contacts.filter(contact => contact.favorite);\n  }\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <List>\n        {visibleContacts ? (\n          visibleContacts?.map(({ _id, name, phone, email, favorite }) => (\n            <ContactItem\n              key={_id}\n              id={_id}\n              name={name}\n              phone={phone}\n              email={email}\n              favorite={favorite}\n            />\n          ))\n        ) : (\n          <Typography>Loading Contact ...</Typography>\n        )}\n      </List>\n      {contacts?.length === 0 && (\n        <Typography>there are not contacts</Typography>\n      )}\n    </>\n  );\n};\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilterValue } from '../redux/phoneBook/filterSlice';\nimport { Paper, InputBase } from '@mui/material';\nimport{memo}from \"react\"\n\n\n const Filter=()=> {\n   const value = useSelector(getFilterValue);\n   const dispatch = useDispatch();\n   const onChangeFilter = e => {\n     dispatch(setFilter(e.target.value));\n   };\n   \n   return (\n     <Paper>\n       <InputBase\n         component=\"form\"\n         value={value}\n         onChange={onChangeFilter}\n         placeholder=\" Find contacts by name \"\n       />\n     </Paper>\n   );\n }\nexport default memo(Filter)\n","import * as React from 'react';\nimport { AppBar, Toolbar, IconButton, Fab } from '@mui/material';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport AddIcon from '@mui/icons-material/Add';\nimport { styled } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  toggleShowFavorite,\n  getShowFavoriteValue,\n} from '../redux/phoneBook/filterSlice';\n\nconst StyledFab = styled(Fab)({\n  position: 'absolute',\n  zIndex: 1,\n  top: -30,\n  left: 0,\n  right: 0,\n  margin: '0 auto',\n});\n\nconst BottomAppBar = ({ onOpenModal }) => {\n  const dispatch = useDispatch();\n  const isShowFavoriteContact = useSelector(getShowFavoriteValue);\n\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"favorite list\"\n            size=\"large\"\n            onClick={() => dispatch(toggleShowFavorite())}\n          >\n            {isShowFavoriteContact ? <ImportContactsIcon /> : <FavoriteIcon />}\n          </IconButton>\n\n          <StyledFab color=\"secondary\" aria-label=\"add\" onClick={onOpenModal}>\n            <AddIcon />\n          </StyledFab>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default BottomAppBar;\n","import { useEffect } from 'react';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport toast from 'react-hot-toast';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../redux/phoneBook/phoneBookApi';\nimport { Box, TextField, Button } from '@mui/material';\n\nconst AddContactForm = () => {\n  const [name, setName] = useLocalStorage('name', '');\n  const [email, setEmail] = useLocalStorage('email', '');\n  const [phone, setPhone] = useLocalStorage('phone', '');\n\n  const [addContact, { isSuccess, data, isError, error }] =\n    useAddContactMutation();\n\n  const { data: req } = useGetContactsQuery();\n\n  const contacts = req?.data.result;\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(`contact ${data.data.contact.name} add in list`);\n    }\n    if (isError) {\n      toast.error(`Error: ${error.data.message} `);\n    }\n  }, [isSuccess, data, error, isError, phone]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const addNewContact = () => {\n    const contactName = contacts?.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    const contactPhone = contacts?.find(el => el.phone === phone);\n\n    if (contactName) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n    if (contactPhone) {\n      toast.error(`contact with ${phone} number is already in contacts`);\n      return;\n    } else {\n      addContact({ name, phone, email });\n      setName('');\n      setEmail('');\n      setPhone('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name && phone) {\n      addNewContact();\n    } else {\n      toast('name and phone must have in form');\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      noValidate\n      sx={{ maxWidth: 'sm', mx: 'auto', p: '15px' }}\n    >\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"Name\"\n        name=\"name\"\n        value={name}\n        autoFocus\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id=\"email\"\n        label=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"phone\"\n        value={phone}\n        label=\"Phone\"\n        type=\"tel\"\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Add\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddContactForm;\n","import { useState } from 'react';\nimport { useGetContactsQuery } from '../redux/phoneBook/phoneBookApi';\nimport ContactList from '../components/ContactList';\nimport Filter from 'components/Filter';\nimport BottomAppBar from 'components/BottomAppBar';\nimport Modal from 'components/Modal';\nimport AddContactForm from 'components/AddContactForm';\n\nconst ContactListPage = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const toggleModal = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n  const { data } = useGetContactsQuery();\n  const contacts = data?.data.result;\n\n  return (\n    <>\n      {contacts?.length > 5 && <Filter />}\n      <ContactList data={contacts} />\n      <BottomAppBar onOpenModal={toggleModal} />\n      {modalIsOpen && (\n        <Modal isOpen={modalIsOpen} toggleIsOpen={toggleModal}>\n          <AddContactForm />\n        </Modal>\n      )}\n    </>\n  );\n};\nexport default ContactListPage;\n"],"names":["id","name","favorite","useToggleFavoriteContactMutation","toggleFavoriteContact","isSuccessToggledFavorite","isSuccess","isErrorToggledFavorite","error","isToggledFavorite","isLoading","useEffect","toast","IconButton","size","color","disabled","onClick","data","Favorite","fontSize","FavoriteBorder","useDeleteContactMutation","deleteContact","isSuccessDeleted","isErrorDeleted","isDeleted","Delete","Transition","React","props","ref","Slide","direction","children","isOpen","toggleIsOpen","Dialog","open","onClose","TransitionComponent","sx","width","height","Close","key","defaultValue","useState","currentValue","JSON","parse","localStorage","getItem","value","setValue","setItem","stringify","useLocalStorage","setName","email","setEmail","phone","setPhone","console","log","useGetContactByIdQuery","useEditContactMutation","editContact","isError","handleChange","e","currentTarget","contact","message","Box","component","onSubmit","preventDefault","noValidate","maxWidth","mx","p","TextField","margin","fullWidth","label","onChange","required","type","Button","variant","mt","mb","modalIsOpen","setModalIsOpen","toggleModal","firstLetter","Paper","display","alignItems","Avatar","bgcolor","flexGrow","ml","Typography","flexDirection","Create","contacts","filterValue","useSelector","getFilterValue","getShowFavoriteValue","filter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","List","map","_id","length","Filter","dispatch","useDispatch","InputBase","setFilter","target","placeholder","memo","StyledFab","styled","Fab","position","zIndex","top","left","right","onOpenModal","isShowFavoriteContact","AppBar","bottom","Toolbar","toggleShowFavorite","ImportContacts","Add","useAddContactMutation","addContact","req","useGetContactsQuery","result","contactName","find","el","contactPhone","addNewContact","autoFocus"],"sourceRoot":""}