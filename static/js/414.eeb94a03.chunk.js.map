{"version":3,"file":"static/js/414.eeb94a03.chunk.js","mappings":"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","sources":["hooks/useLockalStorage.js","components/EditContactForm.jsx","components/EditContactWindow.jsx","components/ContactItem.jsx","components/ContactList.jsx","components/Filter.jsx","components/AddContactForm.jsx","components/AddContactWindow.jsx","components/BottomAppBar.jsx","pages/ContactsListPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [value, setValue] = useState(() => {\n    let currentValue;\n    try {\n      currentValue = JSON.parse(\n        localStorage.getItem(key) ?? defaultValue\n      );\n    } catch (error) {\n      currentValue = defaultValue;\n    }\n\n    return currentValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n\nexport default useLocalStorage;\n","import { useEffect} from 'react';\nimport useLocalStorage from 'hooks/useLockalStorage';\nimport { useGetContactByIdQuery,useEditContactMutation } from '../redux/phoneBook/phoneBookApi';\nimport { Box, TextField, Button, } from '@mui/material';\n\nexport default function EditContactForm({ id }) {\n  const [name, setName] = useLocalStorage('name', '');\n  const [email, setEmail] = useLocalStorage('email', '');\n  const [phone, setPhone] = useLocalStorage('phone', '');\n\n  const { data } = useGetContactByIdQuery(id);\n  const [editContact] = useEditContactMutation()\n\n\n  useEffect(() => {\n    if (data) {\n         setName(data.data.contact.name);\n         setEmail(data.data.contact.email);\n         setPhone(data.data.contact.phone);\n    }\n  },[data, setEmail, setName, setPhone])\n\n  function handleChange(e) {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    editContact({id,data:{name,email,phone}});\n    setName('');\n    setEmail('');\n    setPhone('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      noValidate\n      sx={{ maxWidth: 'sm', mx: 'auto', p: '15px' }}\n    >\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Name\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        label=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"phone\"\n        value={phone}\n        label=\"Phone\"\n        type=\"tel\"\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Change\n      </Button>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport CreateIcon from '@mui/icons-material/Create';\nimport EditContactForm from './EditContactForm';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function EditContactWindow({id}) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton\n        size=\"small\"\n        color=\"primary\"\n        aria-label=\"edit\"\n        onClick={handleClickOpen}\n      >\n        <CreateIcon fontSize=\"inherit\" />\n      </IconButton>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <EditContactForm id={id} />\n      </Dialog>\n    </div>\n  );\n}\n","import { Paper, Avatar, IconButton, Typography, Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport EditContactWindow from './EditContactWindow';\n\nexport default function ContactItem({\n  id,\n  name,\n  phone,\n  email,\n  onDeleteContact,\n  favorite,\n  onToggleFavoriteContact,\n}) {\n  const firstLetter = name[0];\n  return (\n    <Paper sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n      <Avatar\n        sx={{\n          bgcolor: 'secondary.main',\n          width: 24,\n          height: 24,\n        }}\n      >\n        {firstLetter}\n      </Avatar>\n      <Box sx={{ flexGrow: 1, ml: 2 }}>\n        <Typography variant=\"button\" display=\"block\">\n          {name}\n        </Typography>\n        <Typography variant=\"caption\" display=\"block\">\n          {email}\n        </Typography>\n        <Typography variant=\"overline\" display=\"block\">\n          {phone}\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <IconButton\n          size=\"small\"\n          aria-label=\"delete\"\n          color=\"primary\"\n          onClick={onDeleteContact}\n        >\n          <DeleteIcon fontSize=\"inherit\" />\n        </IconButton>\n        <EditContactWindow id={id} />\n        <IconButton\n          size=\"small\"\n          aria-label=\"favorite\"\n          color=\"primary\"\n          onClick={onToggleFavoriteContact}\n        >\n          {favorite ? (\n            <FavoriteIcon fontSize=\"inherit\" />\n          ) : (\n            <FavoriteBorderIcon fontSize=\"inherit\" />\n          )}\n        </IconButton>\n      </Box>\n    </Paper>\n  );\n}\n","import ContactItem from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilterValue,getShowFavoriteValue, } from '../redux/phoneBook/filterSlice';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useToggleFavoriteContactMutation,\n} from '../redux/phoneBook/phoneBookApi';\n\nimport { List, Typography } from '@mui/material';\n\nexport default function ContactList() {\n\n  const { data } = useGetContactsQuery();\n  let contacts = data?.contacts;\n\n  const [deleteContact] = useDeleteContactMutation();\n  const [toggleFavoriteContact] = useToggleFavoriteContactMutation();\n  const filterValue = useSelector(getFilterValue);\n\n  const showFavoriteContacts = useSelector(getShowFavoriteValue)\n  if (showFavoriteContacts) {\n     contacts = data?.contacts.filter(contact => contact.favorite);\n  }\n  \n  const getVisibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <List >\n        {visibleContacts ? (\n          visibleContacts?.map(({ _id, name, phone,email,favorite}) => (\n            <ContactItem\n              key={_id}\n              id={_id}\n              name={name}\n              phone={phone}\n              email={email}\n              favorite={favorite}\n              onDeleteContact={() => deleteContact(_id)}\n              onToggleFavoriteContact={() =>toggleFavoriteContact({id:_id,data:({\"favorite\":!favorite})})}\n            />\n          ))\n        ) : (\n          <Typography>Loading Contact ...</Typography>\n        )}\n      </List>\n      {contacts?.length === 0 && <Typography>there are not contacts</Typography>}\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilterValue } from '../redux/phoneBook/filterSlice';\nimport { Paper,  InputBase } from '@mui/material';\n\nexport default function Filter() {\n  const value = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <Paper>\n      <InputBase\n        component=\"form\"\n        value={value}\n        onChange={onChangeFilter}\n        placeholder=\" Find contacts by name \"\n      />\n    </Paper>\n  );\n}\n","import { useEffect} from 'react';\nimport useLocalStorage from 'hooks/useLockalStorage';\nimport toast from 'react-hot-toast';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../redux/phoneBook/phoneBookApi';\nimport { Box, TextField, Button, } from '@mui/material';\n\n\n\n\nexport default function AddContactForm() {\n  const [name, setName] = useLocalStorage('name', '');\n  const [email, setEmail] = useLocalStorage('email', '');\n  const [phone, setPhone] = useLocalStorage('phone', '');\n\n  const [addContact, { isSuccess, data }] = useAddContactMutation();\n\n  const { data: req } = useGetContactsQuery();\n  const contacts = req?.contacts;\n\n  useEffect(() => {\n    if (isSuccess) {\n      toast.success(`contact ${data.data.contact.name} add in list`);\n    }\n  }, [isSuccess, data]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const hasContact = () => {\n    contacts?.find(el => el.name.toLowerCase() === name.toLowerCase())\n      ? toast.error(`${name} is already in contacts`)\n      : addContact({ name, phone, email });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    hasContact();\n    setName('');\n    setEmail('');\n    setPhone('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      noValidate\n      sx={{ maxWidth: 'sm', mx: 'auto', p: '15px' }}\n    >\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"Name\"\n        name=\"name\"\n        value={name}\n        autoFocus\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id=\"email\"\n        label=\"Email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"phone\"\n        value={phone}\n        label=\"Phone\"\n        type=\"tel\"\n        onChange={handleChange}\n      />\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n        Add\n      </Button>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport { styled } from '@mui/material/styles';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\n// \nimport AddContactForm from \"../components/AddContactForm\"\n// \n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst StyledFab = styled(Fab)({\n  position: 'absolute',\n  zIndex: 1,\n  top: -30,\n  left: 0,\n  right: 0,\n  margin: '0 auto',\n});\n\nexport default function AddContactWindow() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <StyledFab color=\"secondary\" aria-label=\"add\" onClick={handleClickOpen}>\n        <AddIcon />\n      </StyledFab>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <AddContactForm />\n      </Dialog>\n    </>\n  );\n}\n","import { AppBar,  Toolbar, IconButton } from '@mui/material';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport AddContactWindow from './AddContactWindow';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { toggleShowFavorite,getShowFavoriteValue } from '../redux/phoneBook/filterSlice';\n\nexport default function BottomAppBar() {\n  const dispatch = useDispatch();\n  const isShowFavoriteContact=useSelector(getShowFavoriteValue)\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"primary\" sx={{ top: 'auto', bottom: 0 }}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"favorite list\"\n            size=\"large\"\n            onClick={() => dispatch(toggleShowFavorite())}\n          >\n            {isShowFavoriteContact?<ImportContactsIcon/>:<FavoriteIcon />}\n          </IconButton>\n          <AddContactWindow />\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n","import ContactList from '../components/ContactList';\nimport Filter from 'components/Filter';\nimport BottomAppBar from 'components/BottomAppBar';\nimport { Box } from '@mui/material';\n\nexport default function ContactListPage() {\n  return (\n    <Box sx={{ my: 12 }}>\n      <Filter />\n      <ContactList />\n      <BottomAppBar />\n    </Box>\n  );\n}\n"],"names":["key","defaultValue","useState","currentValue","JSON","parse","localStorage","getItem","error","value","setValue","useEffect","setItem","stringify","EditContactForm","id","useLocalStorage","name","setName","email","setEmail","phone","setPhone","data","useGetContactByIdQuery","useEditContactMutation","editContact","handleChange","e","currentTarget","contact","Box","component","onSubmit","preventDefault","noValidate","sx","maxWidth","mx","p","TextField","margin","fullWidth","label","onChange","required","type","Button","variant","mt","mb","Transition","React","props","ref","Slide","direction","EditContactWindow","open","setOpen","handleClose","IconButton","size","color","onClick","Create","fontSize","Dialog","fullScreen","onClose","TransitionComponent","AppBar","position","Toolbar","edge","Close","ContactItem","onDeleteContact","favorite","onToggleFavoriteContact","firstLetter","Paper","display","alignItems","Avatar","bgcolor","width","height","flexGrow","ml","Typography","flexDirection","Delete","Favorite","FavoriteBorder","ContactList","useGetContactsQuery","contacts","useDeleteContactMutation","deleteContact","useToggleFavoriteContactMutation","toggleFavoriteContact","filterValue","useSelector","getFilterValue","getShowFavoriteValue","filter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","List","map","_id","length","Filter","dispatch","useDispatch","InputBase","setFilter","target","placeholder","AddContactForm","useAddContactMutation","addContact","isSuccess","req","toast","find","el","autoFocus","StyledFab","styled","Fab","zIndex","top","left","right","AddContactWindow","Add","BottomAppBar","isShowFavoriteContact","bottom","toggleShowFavorite","ImportContacts","ContactListPage","my"],"sourceRoot":""}